* Pasar de ruta relativa a obsoluta✔️​
https://www.geeksforgeeks.org/node-js-path-resolve-method/
const path = require('path');
path1 = path.resolve("users/admin", "readme.md");
console.log(path1)

* Validar si es directorio✔️​
https://www.geeksforgeeks.org/node-js-fs-statsync-method/
const fs = require('fs');
const validateDirectory = (route) => fs.statSync(route).isDirectory();
const validateFile = (route) => fs.statSync(route).isFile();
console.log("Path is directory:", validateDirectory("./test")); //true
console.log("Path is directory:", validateFile("./test")); //false
console.log("Path is directory:", validateFile("./metodos.txt")); //true

* Leer contenido del directorio
const fs = require('fs');
const directory = process.argv[2]
const readDirectory = (route) => fs.readdirSync(route, "utf-8");
console.log(readDirectory(directory))

* Extraer archivos filtrado por extensión
const fs = require('fs');
const path = require('path')
const directory = process.argv[2]
const extension = `.${process.argv[3]}`
const readDirectory = (route, ext) => {
 const content = fs.readdirSync(route, "utf-8");
 const files = content.filter((file)=>{
   return path.extname(file) === extension
 })
console.log(files)
 return files
}
readDirectory(directory,extension)

* Leer contenido de archivos
  En archivo readFile.js
  const fs = require('fs');
  module.exports =  (path) => {
    return new Promise((resolve, reject) => {
      fs.readFile(path, 'UTF-8', (err, data) => {
        if (err) {
          reject({error:err})
        } else {
          resolve(data)
        }
      })
    })
  }

  En el archivo que lo va a leer:
  const readFile = require('./readFiles.js')
  const path = process.argv[2]
  console.log(path)
  readFile(path)
  .then((data) => {
      console.log('Resuelta')
      console.log(data)
    })
    .catch((err) => {
      console.log(err)
    })



Extraer links


